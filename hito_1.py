# -*- coding: utf-8 -*-
"""HITO 1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pSVXiukuinMvCmIwKmcYwD7d6geRuV4R

## TUTORIAL COMO ABRIR EL DATA SET
Descargar el .csv desde https://www.kaggle.com/datasets/ealtman2019/credit-card-transactions/data
y descomprimirlo. \
Correr el pip install y el upload. \
El upload te pedira seleccionar la ubicacion del csv q descargaste, pasele la ubicacion del archivo descomprimido. \
Disfruta
"""

from google.colab import drive

# Mount Google Drive
drive.mount('/content/drive/')

import os
import glob
import pandas as pd

# Define the folder path correctly (after mounting)
folder_path = '/content/drive/My Drive/MINERIA/'

# Get a list of all CSV files in the folder
csv_files = glob.glob(os.path.join(folder_path, '*.csv'))

# Load each CSV file into a list of DataFrames
dfs = [pd.read_csv(file) for file in csv_files]

# Optionally, display file names and check the dataframes
for i, df in enumerate(dfs):
    print(f"File {i+1}: {csv_files[i]}")
    print(df.head())

"""upload solo el archivo con nombre "User0_credit_card_transactions"
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd

df = pd.read_csv('User0_credit_card_transactions.csv') # Nombre default al descomprimir

df

df.describe()

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

plt.style.use('bmh')

"""## Graficos cagones y sin sentido

Agrupamos el dataset por su valor de atributo "Use Chip" y visualizamos la primera fila de cada grupo
"""

df_a = df.groupby('Use Chip')
df_a.head(1)

df_a = df.groupby('Use Chip').size()
ax = df_a.plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))

ax.set_title('Transaction Count by Chip Usage Type')

plt.gca().spines[['top', 'right',]].set_visible(False)

from matplotlib import pyplot as plt
import seaborn as sns

# Filter the DataFrame to include only rows where "Is Fraud?" is "Yes"
df_a  = df.loc[(df['Is Fraud?']=='Yes')]
df_a = df_a.groupby('Use Chip').size()

ax = df_a.plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))

ax.set_title('Fraud Count by Chip Usage Type')
ax.set_xlabel('Amount of Frauds')

plt.gca().spines[['top', 'right',]].set_visible(False)

# chatgpt grafico peor q el mio
df['Amount'] = df['Amount'].replace({'\$': '', ',': ''}, regex=True).astype(float)
df_a = df.loc[df['Is Fraud?'] == 'Yes']

bins = range(0, int(df_a['Amount'].max()) + 100, 100)

df_a['Amount_binned'] = pd.cut(df_a['Amount'], bins=bins)

amount_counts = df_a['Amount_binned'].value_counts().sort_index()

fig, ax = plt.subplots(figsize=(8, 6))

amount_counts.plot(kind='barh', ax=ax)

ax.set_title('Fraud Transactions Grouped by Amount ($100 Intervals)')
ax.set_xlabel('Number of Transactions')
ax.set_ylabel('Amount Binned ($100 Intervals)')

plt.show()

df_a = df.loc[(df['Is Fraud?']=='Yes')]

fig, ax = plt.subplots(figsize=(6, 8))

ax.barh(df_a.Time, df_a['Amount'])

ax.set_title('Distribution of Fraudulent Transaction Amounts Throughout the Day')
ax.set_xlabel('Amount of money')
ax.set_ylabel('Time of the day')

plt.show()